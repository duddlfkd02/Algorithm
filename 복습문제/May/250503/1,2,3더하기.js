/* 🧠 문제 설명

양의 정수 N이 주어질 때,
1, 2, 3을 몇 개라도 더해서 그 합이 N이 되는 모든 경우의 수를 구하세요.
순서가 다른 경우는 다른 경우로 셉니다.


✅ 입출력
	•	첫 줄에 정수 N (1 ≤ N ≤ 40)

  •	1, 2, 3의 합으로 N을 만드는 모든 경우의 수

input:
4

output:
7

경우의 수:
  1+1+1+1  
  1+1+2  
  1+2+1  
  2+1+1  
  2+2  
  1+3  
  3+1  
  → 총 7
*/
const N = 4;

function solution(N) {
  const dp = Array.from({ length: N + 1 }, () => Array(0));
  console.log(dp);

  dp[0] = 1;
  if (N >= 1) dp[1] = 1;
  if (N >= 2) dp[2] = 2;

  for (let i = 3; i <= N; i++) {
    dp[i] = dp[i - 1] + dp[i - 2] + dp[i - 3];
  }

  return dp[N];
}
console.log(solution(N));

// ✏️ 코드 풀이
// N = 4

// dp[0]: 합이 0이 되는 방법 → 아무것도 선택하지 않기 1가지
dp[0] = 1;

// dp[1]: 합이 1이 되는 방법 → [1]
dp[1] = dp[0]; // = 1

// dp[2]: 합이 2가 되는 방법 → [1+1], [2]
dp[2] = dp[1] + dp[0]; // 1 + 1 = 2

// dp[3]: 합이 3이 되는 방법 → [1+1+1], [1+2], [2+1], [3]
dp[3] = dp[2] + dp[1] + dp[0];
// = 2    + 1    + 1
// = 4

// dp[4]: 합이 4가 되는 방법을
//   1) 맨 끝에 +1 을 붙인 것  → 경우 수 = dp[3] = 4  → ([...]+1)
//   2) 맨 끝에 +2 를 붙인 것  → 경우 수 = dp[2] = 2  → ([...]+2)
//   3) 맨 끝에 +3 을 붙인 것  → 경우 수 = dp[1] = 1  → ([...]+3)
// 이 세 가지를 모두 더하면
dp[4] = dp[3] + dp[2] + dp[1];
// = 4    + 2    + 1
// = 7
