/* 🧠 문제 설명

정수 배열 arr가 주어집니다.
배열의 각 요소를 순회하며 다음 규칙에 따라 새로운 배열을 만드세요:

	•	현재 요소가 짝수이면 → 새 배열의 앞쪽에 삽입
	•	현재 요소가 홀수이면 → 새 배열의 뒤쪽에 삽입

모든 요소를 처리한 뒤 새 배열을 반환하세요.


✅ 입출력
	•	arr: 정수 배열 (1 ≤ 길이 ≤ 1,000)
각 원소는 −10,000 이상 10,000 이하의 정수

	•	위 규칙으로 재배치된 새로운 배열


  input: [3, 4, 1, 2]
  output: [2, 4, 3, 1]

  // 흐름:
  // 3 → 홀수이므로 뒤: [3]
  // 4 → 짝수이므로 앞: [4, 3]
  // 1 → 홀수이므로 뒤: [4, 3, 1]
  // 2 → 짝수이므로 앞: [2, 4, 3, 1]
*/

const arr = [3, 4, 1, 2];

/**
 * 접근방식
 * 빈 배열 만들기 stack
 * arr 요소 하나씩 돌아가면서 홀수 / 짝수 구분
 * 홀수 일 때는 push
 * 짝수 일 때는 unshift
 */

function solution(arr) {
  let stack = [];

  for (let i = 0; i < arr.length; i++) {
    if (arr[i] % 2 === 0) {
      stack.unshift(arr[i]);
    } else {
      stack.push(arr[i]);
    }
  }
  return stack;
}

console.log(solution(arr));
